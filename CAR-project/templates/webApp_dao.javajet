<%@ jet package="webapp.dao" class="GenerateDAO" 
	imports ="org.eclipse.emf.common.util.EList webapp.*;"%>
<% BusinessObject obj = (BusinessObject)argument; %>
package <%= obj.getPackage() %>;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.sql.DataSource;

public class DAO<%= obj.getName() %> {
	private final static String RESOURCE_JDBC = "java:comp/env/jdbc/<%= obj.getModel().getDatabaseName() %>";
	
	private Connection getConnection(){
		try {
			final Context lContext = new InitialContext(); 
			final DataSource lDataSource = (DataSource)lContext.lookup(RESOURCE_JDBC);
			final Connection lConnection = lDataSource.getConnection();
			return lConnection;
		} catch (NamingException e) {
			return null; 
		} catch (SQLException e) {
			return null;
		} 
	}
	
	<%
	EList<Field> fields = obj.getField();
	String methodArgs = "";
	String concatFields = "";
	String queryArgs = "";
	for(int i=0; i<fields.size(); i++){%>
	
	public String findBy<%= fields.get(i).getName() %>(<%= fields.get(i).getType() %> <%= fields.get(i).getName() %>){
		Connection connect = getConnection();
		try{
			if(connect == null)
				return "Failed to etablish a connection to datebase <%= obj.getModel().getDatabaseName() %>";
			PreparedStatement lPreparedStatementCreation = null;
			if(((Object)<%= fields.get(i).getName() %>) instanceof String){
				lPreparedStatementCreation =
					connect.prepareStatement("SELECT * FROM <%= obj.getName() %> WHERE <%= fields.get(i).getName() %> = \"" + <%= fields.get(i).getName() %> + "\"");
			} else {
				lPreparedStatementCreation =
					connect.prepareStatement("SELECT * FROM <%= obj.getName() %> WHERE <%= fields.get(i).getName() %> = " + <%= fields.get(i).getName() %>);
			}
			if(lPreparedStatementCreation == null)
				return "Cannot create a preparedStatement";
			ResultSet resultSet = lPreparedStatementCreation.executeQuery();
			if(resultSet.next()){
				return null;
			}
			return "Not found";
		} catch (SQLException e) {
			return "SQLException : " + e.getMessage();
		} 
	}
	
	public String update<%= fields.get(i).getName() %>(int id, <%= fields.get(i).getType() %> <%= fields.get(i).getName() %>){
		Connection connect = getConnection();
		try{
			if(connect == null)
				return "Failed to etablish a connection to datebase <%= obj.getModel().getDatabaseName() %>";
			
			final PreparedStatement lPreparedStatementCreation =
					connect.prepareStatement("UPDATE <%= obj.getName() %> SET <%= fields.get(i).getName() %> = " + <%= fields.get(i).getName() %> + " WHERE id = " + id);
			lPreparedStatementCreation.executeUpdate();
			return null;
		} catch (SQLException e) {
			return "SQLException : " + e.getMessage();
		} 
	}
	
		<%methodArgs += fields.get(i).getType() + " " + fields.get(i).getName();
		concatFields += fields.get(i).getName();
		queryArgs += "?";
		if(i < (fields.size() - 1)){
			methodArgs += ", ";
			concatFields += ", ";
			queryArgs += ", ";
		}
	}
	%>
	public String add<%= obj.getName() %>(<%= methodArgs %>){
		Connection connect = getConnection();
		try{
			if(connect == null)
				return "Failed to etablish a connection to datebase <%= obj.getModel().getDatabaseName() %>";
			
			final PreparedStatement lPreparedStatementCreation =
					connect.prepareStatement("INSERT INTO <%= obj.getName() %>(<%= concatFields %>) VALUES(<%= queryArgs %>)");
			<%
			for(int j=0; j<fields.size(); j++){
			%>
			lPreparedStatementCreation.setObject(<%= j+1 %>, <%= fields.get(j).getName() %>); 
			<%}%>
			lPreparedStatementCreation.executeUpdate();
			return null;
		} catch (SQLException e) {
			return "SQLException : " + e.getMessage();
		} 
	}
}